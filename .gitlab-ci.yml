default:
  image: 'node:21-slim'
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  KUBE_HOST: 'https://k8s.stfc.skao.int'
  a11y_urls: $KUBE_HOST/$KUBE_NAMESPACE/ptt
  JS_NODE_VERSION: 21
  TEST_IMAGE: >-
    cypress/browsers:node-20.12.2-chrome-124.0.6367.60-1-ff-125.0.2-edge-124.0.2478.51-1
stages:
  - dependencies
  - lint
  - build
  - test
  - scan
  - pages
  - deploy
  - integration
  - staging
  - accessibility
  - publish
js-test:
  image: '${TEST_IMAGE}'
  before_script:
    - apt update && apt install -y make
    - >-
      [ -f .make/js.mk ] || (echo "File js.mk not included in Makefile"; exit
      1;)
    - make help | grep js-test
    - make js-install-reinstall
install_dependencies:
  stage: dependencies
  tags:
    - k8srunner
  before_script:
    - rm -rf node_modules
  script:
    - 'npm config set registry https://registry.npmjs.org/'
    - yarn install --immutable
  cache:
    paths:
      - node_modules/
    policy: push
code_analysis:
  stage: lint
  tags:
    - k8srunner
  cache:
    paths:
      - node_modules/
    policy: pull
  before_script:
    - mkdir -p build/reports
  script:
    - 'npm config set registry https://registry.npmjs.org/'
    - yarn install --immutable
    - yarn code-analysis
    - mv linting.xml build/reports/linting.xml
  artifacts:
    paths:
      - build/
test_and_coverage:
  image: >-
    cypress/browsers:node-20.9.0-chrome-118.0.5993.88-1-ff-118.0.2-edge-118.0.2088.46-1
  stage: test
  tags:
    - k8srunner
  before_script:
    - mkdir -p build/reports
    - mkdir -p build/.nyc_output
    - apt update && apt -y install make
    - yarn install --immutable
  script:
    - yarn start &
    - 'yarn test:e2e:headless'
    - 'yarn test:coverage:report:ci'
    - mv build/reports/cobertura-coverage.xml build/reports/code-coverage.xml
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  cache:
    paths:
      - node_modules/
      - .cache/Cypress
    policy: pull
  artifacts:
    paths:
      - build/
list_dependencies:
  stage: test
  tags:
    - k8srunner
  allow_failure: true
  cache:
    paths:
      - node_modules/
    policy: pull
  script:
    - 'npm config set registry https://registry.npmjs.org/'
    - yarn install --immutable
    - yarn list --depth=0 --json >> npm_deps.json
    - yarn list --depth=0  >> npm_deps.txt
    - mkdir .public
    - cp npm_deps.txt .public/
    - cp npm_deps.json .public/
  artifacts:
    paths:
      - .public
test-counts:
  image: >-
    cypress/browsers:node-20.9.0-chrome-118.0.5993.88-1-ff-118.0.2-edge-118.0.2088.46-1
  stage: test
  tags:
    - k8srunner
  cache:
    paths:
      - node_modules/
    policy: pull
  before_script:
    - mkdir -p build/tests
    - yarn install --immutable
  script:
    - 'yarn test:cypress:component:ci'
    - yarn merge-reports
  artifacts:
    paths:
      - build/
build:
  stage: build
  tags:
    - k8srunner
  cache:
    paths:
      - node_modules/
    policy: pull
  script:
    - 'npm config set registry https://registry.npmjs.org/'
    - yarn install --immutable
    - yarn build
pages:
  stage: pages
  tags:
    - k8srunner
  dependencies:
    - test-counts
    - test_and_coverage
    - list_dependencies
    - code_quality
  script:
    - mv public/* .
    - cp -r build/* public
    - cp -r .public/* public
  artifacts:
    paths:
      - public
    expire_in: 30 days
.info_script: &ref_2
  - >-
    echo "Status of pods in $KUBE_NAMESPACE namespace:"

    kubectl get pods -n $KUBE_NAMESPACE -o jsonpath="{range .items[*]}{'Pod:
    '}{.metadata.name}:{'\n'}{'\t'}{'Image:
    '}{.spec.containers[*].image}{'\n'}{'\t'}{'Status:
    '}{.status.phase}{'\n'}{end}{'\n'}"

    echo "Addresses to connect to the deployment of the SLT: "

    echo "https://k8s.stfc.skao.int/$KUBE_NAMESPACE/slt/"

    echo "SLT Backend Swagger UI:"

    echo "https://k8s.stfc.skao.int/$KUBE_NAMESPACE/slt/api/v0/ui"
.dev_env:
  variables: &ref_0
    KUBE_NAMESPACE: dev-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
  environment: &ref_1
    name: dev-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
info-dev-environment:
  variables: *ref_0
  environment: *ref_1
  script:
    - *ref_2
info-integration:
  script:
    - *ref_2
info-staging:
  script:
    - *ref_2
deploy-dev-environment:
  variables: *ref_0
  environment: *ref_1
test-dev-environment:
  variables: *ref_0
  environment: *ref_1
stop-dev-environment:
  variables: *ref_0
  environment: *ref_1
include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Verify/Accessibility.gitlab-ci.yml
  - project: ska-telescope/templates-repository
    file: gitlab-ci/includes/docs.gitlab-ci.yml
  - project: ska-telescope/templates-repository
    file: gitlab-ci/includes/oci-image.gitlab-ci.yml
  - project: ska-telescope/templates-repository
    file: gitlab-ci/includes/release.gitlab-ci.yml
  - project: ska-telescope/templates-repository
    file: gitlab-ci/includes/finaliser.gitlab-ci.yml
  - project: ska-telescope/templates-repository
    file: gitlab-ci/includes/helm-chart.gitlab-ci.yml
  - project: ska-telescope/templates-repository
    file: gitlab-ci/includes/deploy.gitlab-ci.yml
  - project: ska-telescope/templates-repository
    file: gitlab-ci/includes/js-lint.gitlab-ci.yml
  - project: ska-telescope/templates-repository
    file: gitlab-ci/includes/js-e2e-test.gitlab-ci.yml
js-e2e-test:
  variables:
    KUBE_HOST: >-
      http://ingress-nginx-controller-lb-stfc-techops-production-cicd.ingress-nginx.svc.techops.internal.skao.int
code_quality:
  artifacts:
    paths:
      - gl-code-quality-report.json
  services: []
  tags:
    - k8srunner
  rules:
    - if: $CODE_QUALITY_DISABLED
      when: never
    - if: >-
        $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE ==
        "push"
      when: never
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH
